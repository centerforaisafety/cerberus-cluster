---
- name: Ensure billing directory exists
  file:
    path: "/opt/oci-hpc/billing"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

- name: Copy files
  become: true
  copy:
    src: '{{ item }}'
    dest: '/opt/oci-hpc/billing/{{ item }}'
    force: no
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  with_items:
    - billing.sql

- name: Copy scripts
  become: true
  copy: 
    src: '{{ item }}'
    dest: '/opt/oci-hpc/billing/{{ item }}'
    force: no
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: 0755
  with_items:
    - filesystem.sh
    - gpu.sh
    - network.sh
    - invoice.sh

- name: Install pexpect
  become: true
  shell: "/usr/bin/pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org --trusted-host pypi.python.org pexpect"

- name: Check if MySQL authentication credentials have been set
  shell: "mysql_config_editor print --all | grep billing"
  register: billing_credentials_exist_result
  ignore_errors: true

- name: Set a fact based on whether MySQL credentials have been set
  set_fact:
    billing_credentials_are_set: "{{ 'billing' in billing_credentials_exist_result.stdout }}"

- name: Add MySQL authentication credentials for billing database
  expect:
    command: /bin/bash -c "mysql_config_editor set --login-path=billing --host={{ billing_mysql_ip }} --user={{ billing_mysql_db_admin_username }} --password"
    responses:
      "Enter password:": "{{ billing_mysql_db_admin_password }}\n"
  when: not billing_credentials_are_set

- name: Check if database exists
  shell: "mysql --login-path=billing -e 'SHOW DATABASES LIKE \"billing\";'"
  register: db_exists_result
  ignore_errors: true

- name: Set a fact based on the database existence
  set_fact:
    billing_database_exists: "{{ 'billing' in db_exists_result.stdout }}"

- name: Create billing database
  shell: "mysql --login-path=billing < /opt/oci-hpc/billing/billing.sql"
  when: not billing_database_exists

- name: Create a billing filesystem usage cron file under /etc/cron.d
  cron:
    name: Collect filesystem usage for billing
    minute: "0"
    user: '{{ ansible_user }}'
    job: "/opt/oci-hpc/billing/filesystem.sh"
    disabled: true

- name: Create a billing gpu usage cron file under /etc/cron.d
  cron:
    name: Collect gpu usage for billing
    minute: "0"
    hour: "0"
    user: '{{ ansible_user }}'
    job: "/opt/oci-hpc/billing/gpu.sh"
    disabled: true

- name: Create a network egress usage cron file under /etc/cron.d
  cron:
    name: network egress usage for billing
    minute: "0"
    user: '{{ ansible_user }}'
    job: "/opt/oci-hpc/billing/network.sh"
    disabled: true

- name: Create example invoice cron file under /etc/cron.d
  cron:
    name: "Example: Generate invoice for {account_name}"
    user: '{{ ansible_user }}'
    job: "/opt/oci-hpc/billing/invoice.sh --verbose --account \"{account_name}\" | sudo tee /data/{account_name}/invoices/{account_name}_invoices.csv >/dev/null"


